// <auto-generated />
using HotelListingDataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelListingDataAccess.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220119023926_seeding database")]
    partial class Seedingdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HotelListingModel.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shortname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nigeria",
                            Shortname = "NIG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ghana",
                            Shortname = "GHN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cameroon",
                            Shortname = "CMR"
                        });
                });

            modelBuilder.Entity("HotelListingModel.Model.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Maryland",
                            CountryId = 1,
                            Name = "Sharaton",
                            rating = 4.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "Victoria Island",
                            CountryId = 2,
                            Name = "Radisson Blue",
                            rating = 5.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "Adeniyi Jones",
                            CountryId = 3,
                            Name = "Chesterfield",
                            rating = 3.0
                        });
                });

            modelBuilder.Entity("HotelListingModel.Model.Hotel", b =>
                {
                    b.HasOne("HotelListingModel.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
